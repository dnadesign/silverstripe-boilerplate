#!/bin/sh

# SilverStripe Framework App Boilerplate
#
# Installation helper for unix based operation systems. To setup a new app with
# the bootstrap run the following
#
# bash <(curl -s https://raw.githubusercontent.com/fullscreeninteractive/silverstripe-boilerplate/master/install)
#
# And follow the prompts

TEMP_PATH="/tmp/fsi_sfab"

command -v git >/dev/null 2>&1 || { 
	echo "git is required to download the SilverStripe Framework. Aborting." >&2; exit 1; 
}

command -v composer >/dev/null 2>&1 || {
	echo "--> Installing Composer"
	@curl -sS https://getcomposer.org/installer | php
	@mv composer.phar /usr/local/bin/composer.phar
}


echo "Enter the path for your new SilverStripe project (e.g ~/Sites/app):";
read INSTALL_PATH

if [ -d "$INSTALL_PATH" ]; then
	echo "$INSTALL_PATH exists, cannot install to existing folder";

	exit
fi

echo "Which boilerplate template would you like to start with (cms, framework, foundation)";
read BRANCH_NAME

if [ "$BRANCH_NAME" = 'framework' ]; then
	BRANCH_NAME='master'
fi

if [ -d "$TEMP_PATH" ]; then
	echo "--> Updating SilverStripe Framework Boilerplate"

	cd $TEMP_PATH
	git fetch -q origin
	git clean -f -d -q
else
	echo "--> Installing SilverStripe Framework Boilerplate"

	git clone -q git@github.com:wilr/silverstripe-framework-app-boilerplate.git $TEMP_PATH
	cd $TEMP_PATH
fi


exists=`git show-ref remotes/origin/$BRANCH_NAME`

if [ ! -n "$exists" ]; then
	echo "Template $BRANCH_NAME does not exist in the boilerplate. Try cms"
	exit
fi


git reset --hard -q origin/$BRANCH_NAME
cd - >/dev/null

echo "--> Linking SilverStripe Boilerplate"

if [[ "$INSTALL_PATH" == \~*/* || "$INSTALL_PATH" == \~ || "$INSTALL_PATH" == \~/* || "$INSTALL_PATH" == \~/ ]]; then
	INSTALL_PATH="${HOME}${INSTALL_PATH:1:${#INSTALL_PATH}}"
fi

cp -R $TEMP_PATH $INSTALL_PATH


if [ -d "$INSTALL_PATH" ]; then
	echo "--> Cleaning up SilverStripe Boilerplate"
	cd $INSTALL_PATH
	rm -rf .git install README.md LICENSE.md

	echo "--> Pulling silverstripe-framework in via Composer"
	composer update -q

	command -v sake >/dev/null 2>&1 || {
		echo "--> Installing Sake"
		./framework/sake installsake
	}

	cd - >/dev/null
else 
	echo "--> Error installing SilverStripe Boilerplate"
fi

# 
# Setup the DNA boilerplate.
#
# This pulls it the github version, copies the information it needs from the
# existing app directory then replaces that the boilerplate.
#
echo "--> Adding DNA Boilerplate"
git clone -q https://github.com/dnadesign/dna_frontend_boilerplate.git $TEMP_PATH/dna 

# Copy assests in
cp -R $INSTALL_PATH/app/templates $TEMP_PATH/dna/templates
cp -R $INSTALL_PATH/app/code $TEMP_PATH/dna/code
cp -R $INSTALL_PATH/app/_config $TEMP_PATH/dna/_config
cp -R $INSTALL_PATH/app/tests $TEMP_PATH/dna/_config
cp -R $INSTALL_PATH/app/_config.php $TEMP_PATH/dna/_config.php

# Replace contents of the files with the correct DNA front end paths.
if [ "$BRANCH_NAME" = 'master' ]; then
	cat > $TEMP_PATH/dna/code/controllers/AppController.php <<'endmsg'
<?php

/**
 * @package {@packagename}
 * @subpackage controllers
 */
class AppController extends Controller {

	/**
	 * Handle 404 errors gracefully as the normal 404 error pages are part
	 * of the CMS module
	 */
	public function handleAction($request, $action) {
		try {
			$response = parent::handleAction($request, $action);

			return $response;
		}
		catch(SS_HTTPResponse_Exception $e) {
			$response = $e->getResponse();
			$response->addHeader('Content-Type', 'text/html; charset=utf-8');
			$response->setBody($this->renderWith(array('Error', 'AppController')));

			return $response;
		}
	}

	/**
	 * Return a HTTP error to the user
	 */
	public function httpError($errorCode = 404, $errorMessage = null) {
		$template = array('Error', 'BaseController');
		$result = new ArrayData(array(
			'Title' => 'Whoops!',
			'Content' => DBField::create_field('HTMLText', $errorMessage)
		));

		parent::httpError($errorCode,new SS_HTTPResponse($result->renderWith($template)));
	}

	public function init() {
		parent::init();

		Requirements::css('app/css/dist/production.css');
		Requirements::javascript('app/js/site.src.js');
	}
}
endmsg
else
	cat > $TEMP_PATH/dna/code/pagetypes/Page.php <<'endmsg'
<?php

/**
 * @package {@packagename}
 * @subpackage pagetypes
 */
class Page extends SiteTree {
	
	private static $db = array(

	);

	private static $has_one = array(

	);
}

/**
 * @package {@packagename}
 * @subpackage controller
 */
class Page_Controller extends ContentController {
	
	private static $allowed_actions = array(

	);

	public function init() {
		parent::init();

		Requirements::css('app/css/dist/production.css');
		Requirements::javascript('app/js/site.src.js');
	}
}
endmsg
fi
# Remove existing app and move this back in
rm -rf $INSTALL_PATH/app/
mv $TEMP_PATH/dna $INSTALL_PATH/app

echo "--> Done."
